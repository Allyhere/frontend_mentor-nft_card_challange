@use "variables" as *;
@use "helpers" as *;
@use "mixins" as *;
@use 'sass:color';

:root {
  --animation-speed: 0.2s;
  --animation-easing: ease-in;
  @media (prefers-reduced-motion: reduce) {
    --animation-speed: 100ms;
    --animation-easing: linear;
  }
}

*,
*:is(::before, ::after) {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  min-block-size: 100vh;
  display: grid;
  grid-template-rows: 1fr 30px;
  place-items: center;
  font-family: $f-family;
  background-color: color(neutral, main-bg);
}

img {
  display: block;
}

.eth-card {
  display: flex;
  flex-flow: wrap;
  align-items: center;
  justify-content: space-between;
  gap: 1.5ch;

  height: max-content; width: 320px;
  padding: 2.5ch;

  background-color: color(neutral, card-bg);
  border-radius: $radius;
  @media (min-width: 430px){ 
    box-shadow:
     0 0 10px 1rem hsla(0, 0%, 0%, 0.1),
     0 0 10px 2rem hsla(0, 0%, 0%, 0.1);
  }
  &__container {
    position: relative;
    overflow: hidden;
    border-radius: inherit;
    &:hover .eth-card__overlay { opacity: 1; }
  }
  &__overlay {
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    background-color: color.adjust(
      color(primary, cyan),
      $alpha: -0.5
    );
    cursor: pointer;
    opacity: 0;
    transition: var(--animation-speed) var(--animation-easing);
  }
  &__image {
    max-width: 100%;
  }
  &__title {
    @include make-font();
  }
  &__description {
    @include make-font();
  }
  &__value {
    display: inherit;
    align-items: center;
    gap: 0.8ch;
    @include make-font();
  }
  &__expiration {
    display: inherit;
    align-items: center;
    gap: 0.8ch;
    @include make-font();
  }
  &__creator {
    display: inherit;
    align-items: center;
    gap: 1.5ch;
    font-style: normal;
    @include make-font();
  }
  &__icon {
    max-width: 2rem;
    border-radius: 50%;
    border: 1px solid color(neutral, font);
  }
}

.divider {
  width: 100%;
  border: 0.5px solid color(neutral, line);
}

.link {
  color: color(neutral, font);
  text-decoration: none;
  cursor: pointer;
  transition: color var(--animation-speed) var(--animation-easing);
  &:hover {
    color: color(primary, cyan);
  }
}

.attribution {
  color: color(neutral, font);
  font-size: 0.8rem;
  a { color: color(primary, soft-blue); }
}